name: Create and Publish package

on: 
  push:
    branches: [ main ]

jobs:
  build:
  
    runs-on: ubuntu-latest
    env:
      working-directory: ./src
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: '0'

    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.26.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_BRANCHES: main
        WITH_V: true

    - name: Get Previous tag
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@master"

    - name: Setup .NET 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - name: Setup .NET Core 3.1 
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
        
    - name: Install dependencies
      run: dotnet restore
      working-directory: ${{env.working-directory}}
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      working-directory: ${{env.working-directory}}
      
    - name: Zip the Build
      run: zip -r ${{env.working-directory}}/Thenewboston.${{ steps.previoustag.outputs.tag }}.zip ${{env.working-directory}}/Thenewboston/bin/Release/netcoreapp3.1/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.previoustag.outputs.tag }}
        release_name: Release ${{ steps.previoustag.outputs.tag }}
        body: Latest source code and binaries
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{env.working-directory}}/Thenewboston.${{ steps.previoustag.outputs.tag }}.zip
        asset_name: Thenewboston.${{ steps.previoustag.outputs.tag }}.zip
        asset_content_type: application/zip

    - name: Create NuGet Package
      run: |
        export version=${{steps.previoustag.outputs.tag}}
        export versionNumber=${version:1}
        dotnet pack -c Release /p:Version=$versionNumber /p:PackageReleaseNotes="Please refer to https://github.com/thenewboston-developers/dotnetcore-sdk/"
      working-directory: ${{env.working-directory}}/Thenewboston
      
    - name: Publish NuGet Package
      run: |
        export version=${{steps.previoustag.outputs.tag}}
        export versionNumber=${version:1}
        dotnet nuget push ./bin/Release/Thenewboston.${versionNumber}.nupkg --api-key ${{ secrets.API_KEY_NUGET }} --source https://api.nuget.org/v3/index.json --no-symbols true
      working-directory: ${{env.working-directory}}/Thenewboston
